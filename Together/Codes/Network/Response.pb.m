// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Response.pb.h"

@implementation ResponseRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ResponseRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UserResponseRoot registerAllExtensions:registry];
    [RoomResponseRoot registerAllExtensions:registry];
    [DataRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface HTTPResponse ()
@property int32_t code;
@property BOOL success;
@property (retain) NSString* msg;
@property (retain) NSString* serverTime;
@property (retain) LoginResponse* loginResponse;
@property (retain) DetailResponse* detailResponse;
@property (retain) UsernameExistResponse* existUsernameResponse;
@property (retain) RoomInfoResponse* roomInfoResponse;
@property (retain) CreateRoomResponse* createRoomResponse;
@property (retain) List* list;
@property (retain) IsExistNewMessageResponse* existNewMessageResponse;
@end

@implementation HTTPResponse

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value {
  hasCode_ = !!value;
}
@synthesize code;
- (BOOL) hasSuccess {
  return !!hasSuccess_;
}
- (void) setHasSuccess:(BOOL) value {
  hasSuccess_ = !!value;
}
- (BOOL) success {
  return !!success_;
}
- (void) setSuccess:(BOOL) value {
  success_ = !!value;
}
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) value {
  hasMsg_ = !!value;
}
@synthesize msg;
- (BOOL) hasServerTime {
  return !!hasServerTime_;
}
- (void) setHasServerTime:(BOOL) value {
  hasServerTime_ = !!value;
}
@synthesize serverTime;
- (BOOL) hasLoginResponse {
  return !!hasLoginResponse_;
}
- (void) setHasLoginResponse:(BOOL) value {
  hasLoginResponse_ = !!value;
}
@synthesize loginResponse;
- (BOOL) hasDetailResponse {
  return !!hasDetailResponse_;
}
- (void) setHasDetailResponse:(BOOL) value {
  hasDetailResponse_ = !!value;
}
@synthesize detailResponse;
- (BOOL) hasExistUsernameResponse {
  return !!hasExistUsernameResponse_;
}
- (void) setHasExistUsernameResponse:(BOOL) value {
  hasExistUsernameResponse_ = !!value;
}
@synthesize existUsernameResponse;
- (BOOL) hasRoomInfoResponse {
  return !!hasRoomInfoResponse_;
}
- (void) setHasRoomInfoResponse:(BOOL) value {
  hasRoomInfoResponse_ = !!value;
}
@synthesize roomInfoResponse;
- (BOOL) hasCreateRoomResponse {
  return !!hasCreateRoomResponse_;
}
- (void) setHasCreateRoomResponse:(BOOL) value {
  hasCreateRoomResponse_ = !!value;
}
@synthesize createRoomResponse;
- (BOOL) hasList {
  return !!hasList_;
}
- (void) setHasList:(BOOL) value {
  hasList_ = !!value;
}
@synthesize list;
- (BOOL) hasExistNewMessageResponse {
  return !!hasExistNewMessageResponse_;
}
- (void) setHasExistNewMessageResponse:(BOOL) value {
  hasExistNewMessageResponse_ = !!value;
}
@synthesize existNewMessageResponse;
- (void) dealloc {
  self.msg = nil;
  self.serverTime = nil;
  self.loginResponse = nil;
  self.detailResponse = nil;
  self.existUsernameResponse = nil;
  self.roomInfoResponse = nil;
  self.createRoomResponse = nil;
  self.list = nil;
  self.existNewMessageResponse = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = 0;
    self.success = NO;
    self.msg = @"";
    self.serverTime = @"";
    self.loginResponse = [LoginResponse defaultInstance];
    self.detailResponse = [DetailResponse defaultInstance];
    self.existUsernameResponse = [UsernameExistResponse defaultInstance];
    self.roomInfoResponse = [RoomInfoResponse defaultInstance];
    self.createRoomResponse = [CreateRoomResponse defaultInstance];
    self.list = [List defaultInstance];
    self.existNewMessageResponse = [IsExistNewMessageResponse defaultInstance];
  }
  return self;
}
static HTTPResponse* defaultHTTPResponseInstance = nil;
+ (void) initialize {
  if (self == [HTTPResponse class]) {
    defaultHTTPResponseInstance = [[HTTPResponse alloc] init];
  }
}
+ (HTTPResponse*) defaultInstance {
  return defaultHTTPResponseInstance;
}
- (HTTPResponse*) defaultInstance {
  return defaultHTTPResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeInt32:1 value:self.code];
  }
  if (self.hasSuccess) {
    [output writeBool:2 value:self.success];
  }
  if (self.hasMsg) {
    [output writeString:3 value:self.msg];
  }
  if (self.hasServerTime) {
    [output writeString:4 value:self.serverTime];
  }
  if (self.hasLoginResponse) {
    [output writeMessage:5 value:self.loginResponse];
  }
  if (self.hasDetailResponse) {
    [output writeMessage:6 value:self.detailResponse];
  }
  if (self.hasExistUsernameResponse) {
    [output writeMessage:7 value:self.existUsernameResponse];
  }
  if (self.hasRoomInfoResponse) {
    [output writeMessage:8 value:self.roomInfoResponse];
  }
  if (self.hasCreateRoomResponse) {
    [output writeMessage:9 value:self.createRoomResponse];
  }
  if (self.hasList) {
    [output writeMessage:10 value:self.list];
  }
  if (self.hasExistNewMessageResponse) {
    [output writeMessage:11 value:self.existNewMessageResponse];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCode) {
    size += computeInt32Size(1, self.code);
  }
  if (self.hasSuccess) {
    size += computeBoolSize(2, self.success);
  }
  if (self.hasMsg) {
    size += computeStringSize(3, self.msg);
  }
  if (self.hasServerTime) {
    size += computeStringSize(4, self.serverTime);
  }
  if (self.hasLoginResponse) {
    size += computeMessageSize(5, self.loginResponse);
  }
  if (self.hasDetailResponse) {
    size += computeMessageSize(6, self.detailResponse);
  }
  if (self.hasExistUsernameResponse) {
    size += computeMessageSize(7, self.existUsernameResponse);
  }
  if (self.hasRoomInfoResponse) {
    size += computeMessageSize(8, self.roomInfoResponse);
  }
  if (self.hasCreateRoomResponse) {
    size += computeMessageSize(9, self.createRoomResponse);
  }
  if (self.hasList) {
    size += computeMessageSize(10, self.list);
  }
  if (self.hasExistNewMessageResponse) {
    size += computeMessageSize(11, self.existNewMessageResponse);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HTTPResponse*) parseFromData:(NSData*) data {
  return (HTTPResponse*)[[[HTTPResponse builder] mergeFromData:data] build];
}
+ (HTTPResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HTTPResponse*)[[[HTTPResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HTTPResponse*) parseFromInputStream:(NSInputStream*) input {
  return (HTTPResponse*)[[[HTTPResponse builder] mergeFromInputStream:input] build];
}
+ (HTTPResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HTTPResponse*)[[[HTTPResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HTTPResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HTTPResponse*)[[[HTTPResponse builder] mergeFromCodedInputStream:input] build];
}
+ (HTTPResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HTTPResponse*)[[[HTTPResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HTTPResponse_Builder*) builder {
  return [[[HTTPResponse_Builder alloc] init] autorelease];
}
+ (HTTPResponse_Builder*) builderWithPrototype:(HTTPResponse*) prototype {
  return [[HTTPResponse builder] mergeFrom:prototype];
}
- (HTTPResponse_Builder*) builder {
  return [HTTPResponse builder];
}
@end

@interface HTTPResponse_Builder()
@property (retain) HTTPResponse* result;
@end

@implementation HTTPResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HTTPResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HTTPResponse_Builder*) clear {
  self.result = [[[HTTPResponse alloc] init] autorelease];
  return self;
}
- (HTTPResponse_Builder*) clone {
  return [HTTPResponse builderWithPrototype:result];
}
- (HTTPResponse*) defaultInstance {
  return [HTTPResponse defaultInstance];
}
- (HTTPResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HTTPResponse*) buildPartial {
  HTTPResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HTTPResponse_Builder*) mergeFrom:(HTTPResponse*) other {
  if (other == [HTTPResponse defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasSuccess) {
    [self setSuccess:other.success];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  if (other.hasServerTime) {
    [self setServerTime:other.serverTime];
  }
  if (other.hasLoginResponse) {
    [self mergeLoginResponse:other.loginResponse];
  }
  if (other.hasDetailResponse) {
    [self mergeDetailResponse:other.detailResponse];
  }
  if (other.hasExistUsernameResponse) {
    [self mergeExistUsernameResponse:other.existUsernameResponse];
  }
  if (other.hasRoomInfoResponse) {
    [self mergeRoomInfoResponse:other.roomInfoResponse];
  }
  if (other.hasCreateRoomResponse) {
    [self mergeCreateRoomResponse:other.createRoomResponse];
  }
  if (other.hasList) {
    [self mergeList:other.list];
  }
  if (other.hasExistNewMessageResponse) {
    [self mergeExistNewMessageResponse:other.existNewMessageResponse];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HTTPResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HTTPResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCode:[input readInt32]];
        break;
      }
      case 16: {
        [self setSuccess:[input readBool]];
        break;
      }
      case 26: {
        [self setMsg:[input readString]];
        break;
      }
      case 34: {
        [self setServerTime:[input readString]];
        break;
      }
      case 42: {
        LoginResponse_Builder* subBuilder = [LoginResponse builder];
        if (self.hasLoginResponse) {
          [subBuilder mergeFrom:self.loginResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLoginResponse:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        DetailResponse_Builder* subBuilder = [DetailResponse builder];
        if (self.hasDetailResponse) {
          [subBuilder mergeFrom:self.detailResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDetailResponse:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        UsernameExistResponse_Builder* subBuilder = [UsernameExistResponse builder];
        if (self.hasExistUsernameResponse) {
          [subBuilder mergeFrom:self.existUsernameResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExistUsernameResponse:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        RoomInfoResponse_Builder* subBuilder = [RoomInfoResponse builder];
        if (self.hasRoomInfoResponse) {
          [subBuilder mergeFrom:self.roomInfoResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRoomInfoResponse:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        CreateRoomResponse_Builder* subBuilder = [CreateRoomResponse builder];
        if (self.hasCreateRoomResponse) {
          [subBuilder mergeFrom:self.createRoomResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreateRoomResponse:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        List_Builder* subBuilder = [List builder];
        if (self.hasList) {
          [subBuilder mergeFrom:self.list];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setList:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        IsExistNewMessageResponse_Builder* subBuilder = [IsExistNewMessageResponse builder];
        if (self.hasExistNewMessageResponse) {
          [subBuilder mergeFrom:self.existNewMessageResponse];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExistNewMessageResponse:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (int32_t) code {
  return result.code;
}
- (HTTPResponse_Builder*) setCode:(int32_t) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (HTTPResponse_Builder*) clearCode {
  result.hasCode = NO;
  result.code = 0;
  return self;
}
- (BOOL) hasSuccess {
  return result.hasSuccess;
}
- (BOOL) success {
  return result.success;
}
- (HTTPResponse_Builder*) setSuccess:(BOOL) value {
  result.hasSuccess = YES;
  result.success = value;
  return self;
}
- (HTTPResponse_Builder*) clearSuccess {
  result.hasSuccess = NO;
  result.success = NO;
  return self;
}
- (BOOL) hasMsg {
  return result.hasMsg;
}
- (NSString*) msg {
  return result.msg;
}
- (HTTPResponse_Builder*) setMsg:(NSString*) value {
  result.hasMsg = YES;
  result.msg = value;
  return self;
}
- (HTTPResponse_Builder*) clearMsg {
  result.hasMsg = NO;
  result.msg = @"";
  return self;
}
- (BOOL) hasServerTime {
  return result.hasServerTime;
}
- (NSString*) serverTime {
  return result.serverTime;
}
- (HTTPResponse_Builder*) setServerTime:(NSString*) value {
  result.hasServerTime = YES;
  result.serverTime = value;
  return self;
}
- (HTTPResponse_Builder*) clearServerTime {
  result.hasServerTime = NO;
  result.serverTime = @"";
  return self;
}
- (BOOL) hasLoginResponse {
  return result.hasLoginResponse;
}
- (LoginResponse*) loginResponse {
  return result.loginResponse;
}
- (HTTPResponse_Builder*) setLoginResponse:(LoginResponse*) value {
  result.hasLoginResponse = YES;
  result.loginResponse = value;
  return self;
}
- (HTTPResponse_Builder*) setLoginResponseBuilder:(LoginResponse_Builder*) builderForValue {
  return [self setLoginResponse:[builderForValue build]];
}
- (HTTPResponse_Builder*) mergeLoginResponse:(LoginResponse*) value {
  if (result.hasLoginResponse &&
      result.loginResponse != [LoginResponse defaultInstance]) {
    result.loginResponse =
      [[[LoginResponse builderWithPrototype:result.loginResponse] mergeFrom:value] buildPartial];
  } else {
    result.loginResponse = value;
  }
  result.hasLoginResponse = YES;
  return self;
}
- (HTTPResponse_Builder*) clearLoginResponse {
  result.hasLoginResponse = NO;
  result.loginResponse = [LoginResponse defaultInstance];
  return self;
}
- (BOOL) hasDetailResponse {
  return result.hasDetailResponse;
}
- (DetailResponse*) detailResponse {
  return result.detailResponse;
}
- (HTTPResponse_Builder*) setDetailResponse:(DetailResponse*) value {
  result.hasDetailResponse = YES;
  result.detailResponse = value;
  return self;
}
- (HTTPResponse_Builder*) setDetailResponseBuilder:(DetailResponse_Builder*) builderForValue {
  return [self setDetailResponse:[builderForValue build]];
}
- (HTTPResponse_Builder*) mergeDetailResponse:(DetailResponse*) value {
  if (result.hasDetailResponse &&
      result.detailResponse != [DetailResponse defaultInstance]) {
    result.detailResponse =
      [[[DetailResponse builderWithPrototype:result.detailResponse] mergeFrom:value] buildPartial];
  } else {
    result.detailResponse = value;
  }
  result.hasDetailResponse = YES;
  return self;
}
- (HTTPResponse_Builder*) clearDetailResponse {
  result.hasDetailResponse = NO;
  result.detailResponse = [DetailResponse defaultInstance];
  return self;
}
- (BOOL) hasExistUsernameResponse {
  return result.hasExistUsernameResponse;
}
- (UsernameExistResponse*) existUsernameResponse {
  return result.existUsernameResponse;
}
- (HTTPResponse_Builder*) setExistUsernameResponse:(UsernameExistResponse*) value {
  result.hasExistUsernameResponse = YES;
  result.existUsernameResponse = value;
  return self;
}
- (HTTPResponse_Builder*) setExistUsernameResponseBuilder:(UsernameExistResponse_Builder*) builderForValue {
  return [self setExistUsernameResponse:[builderForValue build]];
}
- (HTTPResponse_Builder*) mergeExistUsernameResponse:(UsernameExistResponse*) value {
  if (result.hasExistUsernameResponse &&
      result.existUsernameResponse != [UsernameExistResponse defaultInstance]) {
    result.existUsernameResponse =
      [[[UsernameExistResponse builderWithPrototype:result.existUsernameResponse] mergeFrom:value] buildPartial];
  } else {
    result.existUsernameResponse = value;
  }
  result.hasExistUsernameResponse = YES;
  return self;
}
- (HTTPResponse_Builder*) clearExistUsernameResponse {
  result.hasExistUsernameResponse = NO;
  result.existUsernameResponse = [UsernameExistResponse defaultInstance];
  return self;
}
- (BOOL) hasRoomInfoResponse {
  return result.hasRoomInfoResponse;
}
- (RoomInfoResponse*) roomInfoResponse {
  return result.roomInfoResponse;
}
- (HTTPResponse_Builder*) setRoomInfoResponse:(RoomInfoResponse*) value {
  result.hasRoomInfoResponse = YES;
  result.roomInfoResponse = value;
  return self;
}
- (HTTPResponse_Builder*) setRoomInfoResponseBuilder:(RoomInfoResponse_Builder*) builderForValue {
  return [self setRoomInfoResponse:[builderForValue build]];
}
- (HTTPResponse_Builder*) mergeRoomInfoResponse:(RoomInfoResponse*) value {
  if (result.hasRoomInfoResponse &&
      result.roomInfoResponse != [RoomInfoResponse defaultInstance]) {
    result.roomInfoResponse =
      [[[RoomInfoResponse builderWithPrototype:result.roomInfoResponse] mergeFrom:value] buildPartial];
  } else {
    result.roomInfoResponse = value;
  }
  result.hasRoomInfoResponse = YES;
  return self;
}
- (HTTPResponse_Builder*) clearRoomInfoResponse {
  result.hasRoomInfoResponse = NO;
  result.roomInfoResponse = [RoomInfoResponse defaultInstance];
  return self;
}
- (BOOL) hasCreateRoomResponse {
  return result.hasCreateRoomResponse;
}
- (CreateRoomResponse*) createRoomResponse {
  return result.createRoomResponse;
}
- (HTTPResponse_Builder*) setCreateRoomResponse:(CreateRoomResponse*) value {
  result.hasCreateRoomResponse = YES;
  result.createRoomResponse = value;
  return self;
}
- (HTTPResponse_Builder*) setCreateRoomResponseBuilder:(CreateRoomResponse_Builder*) builderForValue {
  return [self setCreateRoomResponse:[builderForValue build]];
}
- (HTTPResponse_Builder*) mergeCreateRoomResponse:(CreateRoomResponse*) value {
  if (result.hasCreateRoomResponse &&
      result.createRoomResponse != [CreateRoomResponse defaultInstance]) {
    result.createRoomResponse =
      [[[CreateRoomResponse builderWithPrototype:result.createRoomResponse] mergeFrom:value] buildPartial];
  } else {
    result.createRoomResponse = value;
  }
  result.hasCreateRoomResponse = YES;
  return self;
}
- (HTTPResponse_Builder*) clearCreateRoomResponse {
  result.hasCreateRoomResponse = NO;
  result.createRoomResponse = [CreateRoomResponse defaultInstance];
  return self;
}
- (BOOL) hasList {
  return result.hasList;
}
- (List*) list {
  return result.list;
}
- (HTTPResponse_Builder*) setList:(List*) value {
  result.hasList = YES;
  result.list = value;
  return self;
}
- (HTTPResponse_Builder*) setListBuilder:(List_Builder*) builderForValue {
  return [self setList:[builderForValue build]];
}
- (HTTPResponse_Builder*) mergeList:(List*) value {
  if (result.hasList &&
      result.list != [List defaultInstance]) {
    result.list =
      [[[List builderWithPrototype:result.list] mergeFrom:value] buildPartial];
  } else {
    result.list = value;
  }
  result.hasList = YES;
  return self;
}
- (HTTPResponse_Builder*) clearList {
  result.hasList = NO;
  result.list = [List defaultInstance];
  return self;
}
- (BOOL) hasExistNewMessageResponse {
  return result.hasExistNewMessageResponse;
}
- (IsExistNewMessageResponse*) existNewMessageResponse {
  return result.existNewMessageResponse;
}
- (HTTPResponse_Builder*) setExistNewMessageResponse:(IsExistNewMessageResponse*) value {
  result.hasExistNewMessageResponse = YES;
  result.existNewMessageResponse = value;
  return self;
}
- (HTTPResponse_Builder*) setExistNewMessageResponseBuilder:(IsExistNewMessageResponse_Builder*) builderForValue {
  return [self setExistNewMessageResponse:[builderForValue build]];
}
- (HTTPResponse_Builder*) mergeExistNewMessageResponse:(IsExistNewMessageResponse*) value {
  if (result.hasExistNewMessageResponse &&
      result.existNewMessageResponse != [IsExistNewMessageResponse defaultInstance]) {
    result.existNewMessageResponse =
      [[[IsExistNewMessageResponse builderWithPrototype:result.existNewMessageResponse] mergeFrom:value] buildPartial];
  } else {
    result.existNewMessageResponse = value;
  }
  result.hasExistNewMessageResponse = YES;
  return self;
}
- (HTTPResponse_Builder*) clearExistNewMessageResponse {
  result.hasExistNewMessageResponse = NO;
  result.existNewMessageResponse = [IsExistNewMessageResponse defaultInstance];
  return self;
}
@end

