// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RoomData.pb.h"

@implementation RoomDataRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RoomDataRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RoomInfo ()
@property int32_t id;
@property (retain) NSString* title;
@property (retain) NSString* ownerNickname;
@property int32_t type;
@property int32_t status;
@property (retain) NSString* picUrl;
@property int32_t genderType;
@property Float64 distance;
@property int32_t joinPersonCount;
@property int32_t limitPersonCount;
@property (retain) NSString* address;
@property (retain) NSString* createTime;
@end

@implementation RoomInfo

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasOwnerNickname {
  return !!hasOwnerNickname_;
}
- (void) setHasOwnerNickname:(BOOL) value {
  hasOwnerNickname_ = !!value;
}
@synthesize ownerNickname;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasPicUrl {
  return !!hasPicUrl_;
}
- (void) setHasPicUrl:(BOOL) value {
  hasPicUrl_ = !!value;
}
@synthesize picUrl;
- (BOOL) hasGenderType {
  return !!hasGenderType_;
}
- (void) setHasGenderType:(BOOL) value {
  hasGenderType_ = !!value;
}
@synthesize genderType;
- (BOOL) hasDistance {
  return !!hasDistance_;
}
- (void) setHasDistance:(BOOL) value {
  hasDistance_ = !!value;
}
@synthesize distance;
- (BOOL) hasJoinPersonCount {
  return !!hasJoinPersonCount_;
}
- (void) setHasJoinPersonCount:(BOOL) value {
  hasJoinPersonCount_ = !!value;
}
@synthesize joinPersonCount;
- (BOOL) hasLimitPersonCount {
  return !!hasLimitPersonCount_;
}
- (void) setHasLimitPersonCount:(BOOL) value {
  hasLimitPersonCount_ = !!value;
}
@synthesize limitPersonCount;
- (BOOL) hasAddress {
  return !!hasAddress_;
}
- (void) setHasAddress:(BOOL) value {
  hasAddress_ = !!value;
}
@synthesize address;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
- (void) dealloc {
  self.title = nil;
  self.ownerNickname = nil;
  self.picUrl = nil;
  self.address = nil;
  self.createTime = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.title = @"";
    self.ownerNickname = @"";
    self.type = 0;
    self.status = 0;
    self.picUrl = @"";
    self.genderType = 0;
    self.distance = 0;
    self.joinPersonCount = 0;
    self.limitPersonCount = 0;
    self.address = @"";
    self.createTime = @"";
  }
  return self;
}
static RoomInfo* defaultRoomInfoInstance = nil;
+ (void) initialize {
  if (self == [RoomInfo class]) {
    defaultRoomInfoInstance = [[RoomInfo alloc] init];
  }
}
+ (RoomInfo*) defaultInstance {
  return defaultRoomInfoInstance;
}
- (RoomInfo*) defaultInstance {
  return defaultRoomInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasOwnerNickname) {
    [output writeString:3 value:self.ownerNickname];
  }
  if (self.hasType) {
    [output writeInt32:4 value:self.type];
  }
  if (self.hasStatus) {
    [output writeInt32:5 value:self.status];
  }
  if (self.hasPicUrl) {
    [output writeString:6 value:self.picUrl];
  }
  if (self.hasGenderType) {
    [output writeInt32:7 value:self.genderType];
  }
  if (self.hasDistance) {
    [output writeDouble:8 value:self.distance];
  }
  if (self.hasJoinPersonCount) {
    [output writeInt32:9 value:self.joinPersonCount];
  }
  if (self.hasLimitPersonCount) {
    [output writeInt32:10 value:self.limitPersonCount];
  }
  if (self.hasAddress) {
    [output writeString:11 value:self.address];
  }
  if (self.hasCreateTime) {
    [output writeString:12 value:self.createTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasTitle) {
    size += computeStringSize(2, self.title);
  }
  if (self.hasOwnerNickname) {
    size += computeStringSize(3, self.ownerNickname);
  }
  if (self.hasType) {
    size += computeInt32Size(4, self.type);
  }
  if (self.hasStatus) {
    size += computeInt32Size(5, self.status);
  }
  if (self.hasPicUrl) {
    size += computeStringSize(6, self.picUrl);
  }
  if (self.hasGenderType) {
    size += computeInt32Size(7, self.genderType);
  }
  if (self.hasDistance) {
    size += computeDoubleSize(8, self.distance);
  }
  if (self.hasJoinPersonCount) {
    size += computeInt32Size(9, self.joinPersonCount);
  }
  if (self.hasLimitPersonCount) {
    size += computeInt32Size(10, self.limitPersonCount);
  }
  if (self.hasAddress) {
    size += computeStringSize(11, self.address);
  }
  if (self.hasCreateTime) {
    size += computeStringSize(12, self.createTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RoomInfo*) parseFromData:(NSData*) data {
  return (RoomInfo*)[[[RoomInfo builder] mergeFromData:data] build];
}
+ (RoomInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomInfo*)[[[RoomInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RoomInfo*) parseFromInputStream:(NSInputStream*) input {
  return (RoomInfo*)[[[RoomInfo builder] mergeFromInputStream:input] build];
}
+ (RoomInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomInfo*)[[[RoomInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RoomInfo*)[[[RoomInfo builder] mergeFromCodedInputStream:input] build];
}
+ (RoomInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomInfo*)[[[RoomInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomInfo_Builder*) builder {
  return [[[RoomInfo_Builder alloc] init] autorelease];
}
+ (RoomInfo_Builder*) builderWithPrototype:(RoomInfo*) prototype {
  return [[RoomInfo builder] mergeFrom:prototype];
}
- (RoomInfo_Builder*) builder {
  return [RoomInfo builder];
}
@end

@interface RoomInfo_Builder()
@property (retain) RoomInfo* result;
@end

@implementation RoomInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RoomInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RoomInfo_Builder*) clear {
  self.result = [[[RoomInfo alloc] init] autorelease];
  return self;
}
- (RoomInfo_Builder*) clone {
  return [RoomInfo builderWithPrototype:result];
}
- (RoomInfo*) defaultInstance {
  return [RoomInfo defaultInstance];
}
- (RoomInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RoomInfo*) buildPartial {
  RoomInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RoomInfo_Builder*) mergeFrom:(RoomInfo*) other {
  if (other == [RoomInfo defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasOwnerNickname) {
    [self setOwnerNickname:other.ownerNickname];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasPicUrl) {
    [self setPicUrl:other.picUrl];
  }
  if (other.hasGenderType) {
    [self setGenderType:other.genderType];
  }
  if (other.hasDistance) {
    [self setDistance:other.distance];
  }
  if (other.hasJoinPersonCount) {
    [self setJoinPersonCount:other.joinPersonCount];
  }
  if (other.hasLimitPersonCount) {
    [self setLimitPersonCount:other.limitPersonCount];
  }
  if (other.hasAddress) {
    [self setAddress:other.address];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RoomInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RoomInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setOwnerNickname:[input readString]];
        break;
      }
      case 32: {
        [self setType:[input readInt32]];
        break;
      }
      case 40: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 50: {
        [self setPicUrl:[input readString]];
        break;
      }
      case 56: {
        [self setGenderType:[input readInt32]];
        break;
      }
      case 65: {
        [self setDistance:[input readDouble]];
        break;
      }
      case 72: {
        [self setJoinPersonCount:[input readInt32]];
        break;
      }
      case 80: {
        [self setLimitPersonCount:[input readInt32]];
        break;
      }
      case 90: {
        [self setAddress:[input readString]];
        break;
      }
      case 98: {
        [self setCreateTime:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (RoomInfo_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (RoomInfo_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (RoomInfo_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (RoomInfo_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasOwnerNickname {
  return result.hasOwnerNickname;
}
- (NSString*) ownerNickname {
  return result.ownerNickname;
}
- (RoomInfo_Builder*) setOwnerNickname:(NSString*) value {
  result.hasOwnerNickname = YES;
  result.ownerNickname = value;
  return self;
}
- (RoomInfo_Builder*) clearOwnerNickname {
  result.hasOwnerNickname = NO;
  result.ownerNickname = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (RoomInfo_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (RoomInfo_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (int32_t) status {
  return result.status;
}
- (RoomInfo_Builder*) setStatus:(int32_t) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (RoomInfo_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = 0;
  return self;
}
- (BOOL) hasPicUrl {
  return result.hasPicUrl;
}
- (NSString*) picUrl {
  return result.picUrl;
}
- (RoomInfo_Builder*) setPicUrl:(NSString*) value {
  result.hasPicUrl = YES;
  result.picUrl = value;
  return self;
}
- (RoomInfo_Builder*) clearPicUrl {
  result.hasPicUrl = NO;
  result.picUrl = @"";
  return self;
}
- (BOOL) hasGenderType {
  return result.hasGenderType;
}
- (int32_t) genderType {
  return result.genderType;
}
- (RoomInfo_Builder*) setGenderType:(int32_t) value {
  result.hasGenderType = YES;
  result.genderType = value;
  return self;
}
- (RoomInfo_Builder*) clearGenderType {
  result.hasGenderType = NO;
  result.genderType = 0;
  return self;
}
- (BOOL) hasDistance {
  return result.hasDistance;
}
- (Float64) distance {
  return result.distance;
}
- (RoomInfo_Builder*) setDistance:(Float64) value {
  result.hasDistance = YES;
  result.distance = value;
  return self;
}
- (RoomInfo_Builder*) clearDistance {
  result.hasDistance = NO;
  result.distance = 0;
  return self;
}
- (BOOL) hasJoinPersonCount {
  return result.hasJoinPersonCount;
}
- (int32_t) joinPersonCount {
  return result.joinPersonCount;
}
- (RoomInfo_Builder*) setJoinPersonCount:(int32_t) value {
  result.hasJoinPersonCount = YES;
  result.joinPersonCount = value;
  return self;
}
- (RoomInfo_Builder*) clearJoinPersonCount {
  result.hasJoinPersonCount = NO;
  result.joinPersonCount = 0;
  return self;
}
- (BOOL) hasLimitPersonCount {
  return result.hasLimitPersonCount;
}
- (int32_t) limitPersonCount {
  return result.limitPersonCount;
}
- (RoomInfo_Builder*) setLimitPersonCount:(int32_t) value {
  result.hasLimitPersonCount = YES;
  result.limitPersonCount = value;
  return self;
}
- (RoomInfo_Builder*) clearLimitPersonCount {
  result.hasLimitPersonCount = NO;
  result.limitPersonCount = 0;
  return self;
}
- (BOOL) hasAddress {
  return result.hasAddress;
}
- (NSString*) address {
  return result.address;
}
- (RoomInfo_Builder*) setAddress:(NSString*) value {
  result.hasAddress = YES;
  result.address = value;
  return self;
}
- (RoomInfo_Builder*) clearAddress {
  result.hasAddress = NO;
  result.address = @"";
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (NSString*) createTime {
  return result.createTime;
}
- (RoomInfo_Builder*) setCreateTime:(NSString*) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (RoomInfo_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = @"";
  return self;
}
@end

