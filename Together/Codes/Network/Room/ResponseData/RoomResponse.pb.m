// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "RoomResponse.pb.h"

@implementation RoomResponseRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [RoomResponseRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [DataRoot registerAllExtensions:registry];
    [RoomDataRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ShowRoomListResponse ()
@property (retain) List* roomList;
@end

@implementation ShowRoomListResponse

- (BOOL) hasRoomList {
  return !!hasRoomList_;
}
- (void) setHasRoomList:(BOOL) value {
  hasRoomList_ = !!value;
}
@synthesize roomList;
- (void) dealloc {
  self.roomList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.roomList = [List defaultInstance];
  }
  return self;
}
static ShowRoomListResponse* defaultShowRoomListResponseInstance = nil;
+ (void) initialize {
  if (self == [ShowRoomListResponse class]) {
    defaultShowRoomListResponseInstance = [[ShowRoomListResponse alloc] init];
  }
}
+ (ShowRoomListResponse*) defaultInstance {
  return defaultShowRoomListResponseInstance;
}
- (ShowRoomListResponse*) defaultInstance {
  return defaultShowRoomListResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRoomList) {
    [output writeMessage:1 value:self.roomList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRoomList) {
    size += computeMessageSize(1, self.roomList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ShowRoomListResponse*) parseFromData:(NSData*) data {
  return (ShowRoomListResponse*)[[[ShowRoomListResponse builder] mergeFromData:data] build];
}
+ (ShowRoomListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShowRoomListResponse*)[[[ShowRoomListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ShowRoomListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ShowRoomListResponse*)[[[ShowRoomListResponse builder] mergeFromInputStream:input] build];
}
+ (ShowRoomListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShowRoomListResponse*)[[[ShowRoomListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShowRoomListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ShowRoomListResponse*)[[[ShowRoomListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ShowRoomListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShowRoomListResponse*)[[[ShowRoomListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShowRoomListResponse_Builder*) builder {
  return [[[ShowRoomListResponse_Builder alloc] init] autorelease];
}
+ (ShowRoomListResponse_Builder*) builderWithPrototype:(ShowRoomListResponse*) prototype {
  return [[ShowRoomListResponse builder] mergeFrom:prototype];
}
- (ShowRoomListResponse_Builder*) builder {
  return [ShowRoomListResponse builder];
}
@end

@interface ShowRoomListResponse_Builder()
@property (retain) ShowRoomListResponse* result;
@end

@implementation ShowRoomListResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ShowRoomListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ShowRoomListResponse_Builder*) clear {
  self.result = [[[ShowRoomListResponse alloc] init] autorelease];
  return self;
}
- (ShowRoomListResponse_Builder*) clone {
  return [ShowRoomListResponse builderWithPrototype:result];
}
- (ShowRoomListResponse*) defaultInstance {
  return [ShowRoomListResponse defaultInstance];
}
- (ShowRoomListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ShowRoomListResponse*) buildPartial {
  ShowRoomListResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ShowRoomListResponse_Builder*) mergeFrom:(ShowRoomListResponse*) other {
  if (other == [ShowRoomListResponse defaultInstance]) {
    return self;
  }
  if (other.hasRoomList) {
    [self mergeRoomList:other.roomList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ShowRoomListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ShowRoomListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        List_Builder* subBuilder = [List builder];
        if (self.hasRoomList) {
          [subBuilder mergeFrom:self.roomList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRoomList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRoomList {
  return result.hasRoomList;
}
- (List*) roomList {
  return result.roomList;
}
- (ShowRoomListResponse_Builder*) setRoomList:(List*) value {
  result.hasRoomList = YES;
  result.roomList = value;
  return self;
}
- (ShowRoomListResponse_Builder*) setRoomListBuilder:(List_Builder*) builderForValue {
  return [self setRoomList:[builderForValue build]];
}
- (ShowRoomListResponse_Builder*) mergeRoomList:(List*) value {
  if (result.hasRoomList &&
      result.roomList != [List defaultInstance]) {
    result.roomList =
      [[[List builderWithPrototype:result.roomList] mergeFrom:value] buildPartial];
  } else {
    result.roomList = value;
  }
  result.hasRoomList = YES;
  return self;
}
- (ShowRoomListResponse_Builder*) clearRoomList {
  result.hasRoomList = NO;
  result.roomList = [List defaultInstance];
  return self;
}
@end

@interface UserRoomListResponse ()
@property (retain) List* userRoomList;
@end

@implementation UserRoomListResponse

- (BOOL) hasUserRoomList {
  return !!hasUserRoomList_;
}
- (void) setHasUserRoomList:(BOOL) value {
  hasUserRoomList_ = !!value;
}
@synthesize userRoomList;
- (void) dealloc {
  self.userRoomList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userRoomList = [List defaultInstance];
  }
  return self;
}
static UserRoomListResponse* defaultUserRoomListResponseInstance = nil;
+ (void) initialize {
  if (self == [UserRoomListResponse class]) {
    defaultUserRoomListResponseInstance = [[UserRoomListResponse alloc] init];
  }
}
+ (UserRoomListResponse*) defaultInstance {
  return defaultUserRoomListResponseInstance;
}
- (UserRoomListResponse*) defaultInstance {
  return defaultUserRoomListResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserRoomList) {
    [output writeMessage:1 value:self.userRoomList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserRoomList) {
    size += computeMessageSize(1, self.userRoomList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserRoomListResponse*) parseFromData:(NSData*) data {
  return (UserRoomListResponse*)[[[UserRoomListResponse builder] mergeFromData:data] build];
}
+ (UserRoomListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRoomListResponse*)[[[UserRoomListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserRoomListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (UserRoomListResponse*)[[[UserRoomListResponse builder] mergeFromInputStream:input] build];
}
+ (UserRoomListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRoomListResponse*)[[[UserRoomListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserRoomListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserRoomListResponse*)[[[UserRoomListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (UserRoomListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserRoomListResponse*)[[[UserRoomListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserRoomListResponse_Builder*) builder {
  return [[[UserRoomListResponse_Builder alloc] init] autorelease];
}
+ (UserRoomListResponse_Builder*) builderWithPrototype:(UserRoomListResponse*) prototype {
  return [[UserRoomListResponse builder] mergeFrom:prototype];
}
- (UserRoomListResponse_Builder*) builder {
  return [UserRoomListResponse builder];
}
@end

@interface UserRoomListResponse_Builder()
@property (retain) UserRoomListResponse* result;
@end

@implementation UserRoomListResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserRoomListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserRoomListResponse_Builder*) clear {
  self.result = [[[UserRoomListResponse alloc] init] autorelease];
  return self;
}
- (UserRoomListResponse_Builder*) clone {
  return [UserRoomListResponse builderWithPrototype:result];
}
- (UserRoomListResponse*) defaultInstance {
  return [UserRoomListResponse defaultInstance];
}
- (UserRoomListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserRoomListResponse*) buildPartial {
  UserRoomListResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserRoomListResponse_Builder*) mergeFrom:(UserRoomListResponse*) other {
  if (other == [UserRoomListResponse defaultInstance]) {
    return self;
  }
  if (other.hasUserRoomList) {
    [self mergeUserRoomList:other.userRoomList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserRoomListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserRoomListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        List_Builder* subBuilder = [List builder];
        if (self.hasUserRoomList) {
          [subBuilder mergeFrom:self.userRoomList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserRoomList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUserRoomList {
  return result.hasUserRoomList;
}
- (List*) userRoomList {
  return result.userRoomList;
}
- (UserRoomListResponse_Builder*) setUserRoomList:(List*) value {
  result.hasUserRoomList = YES;
  result.userRoomList = value;
  return self;
}
- (UserRoomListResponse_Builder*) setUserRoomListBuilder:(List_Builder*) builderForValue {
  return [self setUserRoomList:[builderForValue build]];
}
- (UserRoomListResponse_Builder*) mergeUserRoomList:(List*) value {
  if (result.hasUserRoomList &&
      result.userRoomList != [List defaultInstance]) {
    result.userRoomList =
      [[[List builderWithPrototype:result.userRoomList] mergeFrom:value] buildPartial];
  } else {
    result.userRoomList = value;
  }
  result.hasUserRoomList = YES;
  return self;
}
- (UserRoomListResponse_Builder*) clearUserRoomList {
  result.hasUserRoomList = NO;
  result.userRoomList = [List defaultInstance];
  return self;
}
@end

@interface RoomPeopleListResponse ()
@property (retain) List* peopleList;
@end

@implementation RoomPeopleListResponse

- (BOOL) hasPeopleList {
  return !!hasPeopleList_;
}
- (void) setHasPeopleList:(BOOL) value {
  hasPeopleList_ = !!value;
}
@synthesize peopleList;
- (void) dealloc {
  self.peopleList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.peopleList = [List defaultInstance];
  }
  return self;
}
static RoomPeopleListResponse* defaultRoomPeopleListResponseInstance = nil;
+ (void) initialize {
  if (self == [RoomPeopleListResponse class]) {
    defaultRoomPeopleListResponseInstance = [[RoomPeopleListResponse alloc] init];
  }
}
+ (RoomPeopleListResponse*) defaultInstance {
  return defaultRoomPeopleListResponseInstance;
}
- (RoomPeopleListResponse*) defaultInstance {
  return defaultRoomPeopleListResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPeopleList) {
    [output writeMessage:1 value:self.peopleList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPeopleList) {
    size += computeMessageSize(1, self.peopleList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RoomPeopleListResponse*) parseFromData:(NSData*) data {
  return (RoomPeopleListResponse*)[[[RoomPeopleListResponse builder] mergeFromData:data] build];
}
+ (RoomPeopleListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomPeopleListResponse*)[[[RoomPeopleListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RoomPeopleListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (RoomPeopleListResponse*)[[[RoomPeopleListResponse builder] mergeFromInputStream:input] build];
}
+ (RoomPeopleListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomPeopleListResponse*)[[[RoomPeopleListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomPeopleListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RoomPeopleListResponse*)[[[RoomPeopleListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (RoomPeopleListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomPeopleListResponse*)[[[RoomPeopleListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomPeopleListResponse_Builder*) builder {
  return [[[RoomPeopleListResponse_Builder alloc] init] autorelease];
}
+ (RoomPeopleListResponse_Builder*) builderWithPrototype:(RoomPeopleListResponse*) prototype {
  return [[RoomPeopleListResponse builder] mergeFrom:prototype];
}
- (RoomPeopleListResponse_Builder*) builder {
  return [RoomPeopleListResponse builder];
}
@end

@interface RoomPeopleListResponse_Builder()
@property (retain) RoomPeopleListResponse* result;
@end

@implementation RoomPeopleListResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RoomPeopleListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RoomPeopleListResponse_Builder*) clear {
  self.result = [[[RoomPeopleListResponse alloc] init] autorelease];
  return self;
}
- (RoomPeopleListResponse_Builder*) clone {
  return [RoomPeopleListResponse builderWithPrototype:result];
}
- (RoomPeopleListResponse*) defaultInstance {
  return [RoomPeopleListResponse defaultInstance];
}
- (RoomPeopleListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RoomPeopleListResponse*) buildPartial {
  RoomPeopleListResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RoomPeopleListResponse_Builder*) mergeFrom:(RoomPeopleListResponse*) other {
  if (other == [RoomPeopleListResponse defaultInstance]) {
    return self;
  }
  if (other.hasPeopleList) {
    [self mergePeopleList:other.peopleList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RoomPeopleListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RoomPeopleListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        List_Builder* subBuilder = [List builder];
        if (self.hasPeopleList) {
          [subBuilder mergeFrom:self.peopleList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPeopleList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPeopleList {
  return result.hasPeopleList;
}
- (List*) peopleList {
  return result.peopleList;
}
- (RoomPeopleListResponse_Builder*) setPeopleList:(List*) value {
  result.hasPeopleList = YES;
  result.peopleList = value;
  return self;
}
- (RoomPeopleListResponse_Builder*) setPeopleListBuilder:(List_Builder*) builderForValue {
  return [self setPeopleList:[builderForValue build]];
}
- (RoomPeopleListResponse_Builder*) mergePeopleList:(List*) value {
  if (result.hasPeopleList &&
      result.peopleList != [List defaultInstance]) {
    result.peopleList =
      [[[List builderWithPrototype:result.peopleList] mergeFrom:value] buildPartial];
  } else {
    result.peopleList = value;
  }
  result.hasPeopleList = YES;
  return self;
}
- (RoomPeopleListResponse_Builder*) clearPeopleList {
  result.hasPeopleList = NO;
  result.peopleList = [List defaultInstance];
  return self;
}
@end

@interface RoomInfoResponse ()
@property (retain) RoomInfo* roomInfo;
@end

@implementation RoomInfoResponse

- (BOOL) hasRoomInfo {
  return !!hasRoomInfo_;
}
- (void) setHasRoomInfo:(BOOL) value {
  hasRoomInfo_ = !!value;
}
@synthesize roomInfo;
- (void) dealloc {
  self.roomInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.roomInfo = [RoomInfo defaultInstance];
  }
  return self;
}
static RoomInfoResponse* defaultRoomInfoResponseInstance = nil;
+ (void) initialize {
  if (self == [RoomInfoResponse class]) {
    defaultRoomInfoResponseInstance = [[RoomInfoResponse alloc] init];
  }
}
+ (RoomInfoResponse*) defaultInstance {
  return defaultRoomInfoResponseInstance;
}
- (RoomInfoResponse*) defaultInstance {
  return defaultRoomInfoResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRoomInfo) {
    [output writeMessage:1 value:self.roomInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRoomInfo) {
    size += computeMessageSize(1, self.roomInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RoomInfoResponse*) parseFromData:(NSData*) data {
  return (RoomInfoResponse*)[[[RoomInfoResponse builder] mergeFromData:data] build];
}
+ (RoomInfoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomInfoResponse*)[[[RoomInfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RoomInfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (RoomInfoResponse*)[[[RoomInfoResponse builder] mergeFromInputStream:input] build];
}
+ (RoomInfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomInfoResponse*)[[[RoomInfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RoomInfoResponse*)[[[RoomInfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (RoomInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RoomInfoResponse*)[[[RoomInfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RoomInfoResponse_Builder*) builder {
  return [[[RoomInfoResponse_Builder alloc] init] autorelease];
}
+ (RoomInfoResponse_Builder*) builderWithPrototype:(RoomInfoResponse*) prototype {
  return [[RoomInfoResponse builder] mergeFrom:prototype];
}
- (RoomInfoResponse_Builder*) builder {
  return [RoomInfoResponse builder];
}
@end

@interface RoomInfoResponse_Builder()
@property (retain) RoomInfoResponse* result;
@end

@implementation RoomInfoResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[RoomInfoResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RoomInfoResponse_Builder*) clear {
  self.result = [[[RoomInfoResponse alloc] init] autorelease];
  return self;
}
- (RoomInfoResponse_Builder*) clone {
  return [RoomInfoResponse builderWithPrototype:result];
}
- (RoomInfoResponse*) defaultInstance {
  return [RoomInfoResponse defaultInstance];
}
- (RoomInfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RoomInfoResponse*) buildPartial {
  RoomInfoResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (RoomInfoResponse_Builder*) mergeFrom:(RoomInfoResponse*) other {
  if (other == [RoomInfoResponse defaultInstance]) {
    return self;
  }
  if (other.hasRoomInfo) {
    [self mergeRoomInfo:other.roomInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RoomInfoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RoomInfoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RoomInfo_Builder* subBuilder = [RoomInfo builder];
        if (self.hasRoomInfo) {
          [subBuilder mergeFrom:self.roomInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRoomInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasRoomInfo {
  return result.hasRoomInfo;
}
- (RoomInfo*) roomInfo {
  return result.roomInfo;
}
- (RoomInfoResponse_Builder*) setRoomInfo:(RoomInfo*) value {
  result.hasRoomInfo = YES;
  result.roomInfo = value;
  return self;
}
- (RoomInfoResponse_Builder*) setRoomInfoBuilder:(RoomInfo_Builder*) builderForValue {
  return [self setRoomInfo:[builderForValue build]];
}
- (RoomInfoResponse_Builder*) mergeRoomInfo:(RoomInfo*) value {
  if (result.hasRoomInfo &&
      result.roomInfo != [RoomInfo defaultInstance]) {
    result.roomInfo =
      [[[RoomInfo builderWithPrototype:result.roomInfo] mergeFrom:value] buildPartial];
  } else {
    result.roomInfo = value;
  }
  result.hasRoomInfo = YES;
  return self;
}
- (RoomInfoResponse_Builder*) clearRoomInfo {
  result.hasRoomInfo = NO;
  result.roomInfo = [RoomInfo defaultInstance];
  return self;
}
@end

