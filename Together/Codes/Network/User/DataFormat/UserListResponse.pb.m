// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UserListResponse.pb.h"

@implementation UserListResponseRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserListResponseRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [DataRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FollowListResponse ()
@property (retain) List* peopleList;
@end

@implementation FollowListResponse

- (BOOL) hasPeopleList {
  return !!hasPeopleList_;
}
- (void) setHasPeopleList:(BOOL) value {
  hasPeopleList_ = !!value;
}
@synthesize peopleList;
- (void) dealloc {
  self.peopleList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.peopleList = [List defaultInstance];
  }
  return self;
}
static FollowListResponse* defaultFollowListResponseInstance = nil;
+ (void) initialize {
  if (self == [FollowListResponse class]) {
    defaultFollowListResponseInstance = [[FollowListResponse alloc] init];
  }
}
+ (FollowListResponse*) defaultInstance {
  return defaultFollowListResponseInstance;
}
- (FollowListResponse*) defaultInstance {
  return defaultFollowListResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPeopleList) {
    [output writeMessage:1 value:self.peopleList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPeopleList) {
    size += computeMessageSize(1, self.peopleList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FollowListResponse*) parseFromData:(NSData*) data {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromData:data] build];
}
+ (FollowListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FollowListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromInputStream:input] build];
}
+ (FollowListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (FollowListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowListResponse_Builder*) builder {
  return [[[FollowListResponse_Builder alloc] init] autorelease];
}
+ (FollowListResponse_Builder*) builderWithPrototype:(FollowListResponse*) prototype {
  return [[FollowListResponse builder] mergeFrom:prototype];
}
- (FollowListResponse_Builder*) builder {
  return [FollowListResponse builder];
}
@end

@interface FollowListResponse_Builder()
@property (retain) FollowListResponse* result;
@end

@implementation FollowListResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FollowListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FollowListResponse_Builder*) clear {
  self.result = [[[FollowListResponse alloc] init] autorelease];
  return self;
}
- (FollowListResponse_Builder*) clone {
  return [FollowListResponse builderWithPrototype:result];
}
- (FollowListResponse*) defaultInstance {
  return [FollowListResponse defaultInstance];
}
- (FollowListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FollowListResponse*) buildPartial {
  FollowListResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FollowListResponse_Builder*) mergeFrom:(FollowListResponse*) other {
  if (other == [FollowListResponse defaultInstance]) {
    return self;
  }
  if (other.hasPeopleList) {
    [self mergePeopleList:other.peopleList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FollowListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FollowListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        List_Builder* subBuilder = [List builder];
        if (self.hasPeopleList) {
          [subBuilder mergeFrom:self.peopleList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPeopleList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPeopleList {
  return result.hasPeopleList;
}
- (List*) peopleList {
  return result.peopleList;
}
- (FollowListResponse_Builder*) setPeopleList:(List*) value {
  result.hasPeopleList = YES;
  result.peopleList = value;
  return self;
}
- (FollowListResponse_Builder*) setPeopleListBuilder:(List_Builder*) builderForValue {
  return [self setPeopleList:[builderForValue build]];
}
- (FollowListResponse_Builder*) mergePeopleList:(List*) value {
  if (result.hasPeopleList &&
      result.peopleList != [List defaultInstance]) {
    result.peopleList =
      [[[List builderWithPrototype:result.peopleList] mergeFrom:value] buildPartial];
  } else {
    result.peopleList = value;
  }
  result.hasPeopleList = YES;
  return self;
}
- (FollowListResponse_Builder*) clearPeopleList {
  result.hasPeopleList = NO;
  result.peopleList = [List defaultInstance];
  return self;
}
@end

@interface FollowedListResponse ()
@property (retain) List* peopleList;
@end

@implementation FollowedListResponse

- (BOOL) hasPeopleList {
  return !!hasPeopleList_;
}
- (void) setHasPeopleList:(BOOL) value {
  hasPeopleList_ = !!value;
}
@synthesize peopleList;
- (void) dealloc {
  self.peopleList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.peopleList = [List defaultInstance];
  }
  return self;
}
static FollowedListResponse* defaultFollowedListResponseInstance = nil;
+ (void) initialize {
  if (self == [FollowedListResponse class]) {
    defaultFollowedListResponseInstance = [[FollowedListResponse alloc] init];
  }
}
+ (FollowedListResponse*) defaultInstance {
  return defaultFollowedListResponseInstance;
}
- (FollowedListResponse*) defaultInstance {
  return defaultFollowedListResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPeopleList) {
    [output writeMessage:1 value:self.peopleList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPeopleList) {
    size += computeMessageSize(1, self.peopleList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FollowedListResponse*) parseFromData:(NSData*) data {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromData:data] build];
}
+ (FollowedListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FollowedListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromInputStream:input] build];
}
+ (FollowedListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowedListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (FollowedListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowedListResponse_Builder*) builder {
  return [[[FollowedListResponse_Builder alloc] init] autorelease];
}
+ (FollowedListResponse_Builder*) builderWithPrototype:(FollowedListResponse*) prototype {
  return [[FollowedListResponse builder] mergeFrom:prototype];
}
- (FollowedListResponse_Builder*) builder {
  return [FollowedListResponse builder];
}
@end

@interface FollowedListResponse_Builder()
@property (retain) FollowedListResponse* result;
@end

@implementation FollowedListResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FollowedListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FollowedListResponse_Builder*) clear {
  self.result = [[[FollowedListResponse alloc] init] autorelease];
  return self;
}
- (FollowedListResponse_Builder*) clone {
  return [FollowedListResponse builderWithPrototype:result];
}
- (FollowedListResponse*) defaultInstance {
  return [FollowedListResponse defaultInstance];
}
- (FollowedListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FollowedListResponse*) buildPartial {
  FollowedListResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FollowedListResponse_Builder*) mergeFrom:(FollowedListResponse*) other {
  if (other == [FollowedListResponse defaultInstance]) {
    return self;
  }
  if (other.hasPeopleList) {
    [self mergePeopleList:other.peopleList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FollowedListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FollowedListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        List_Builder* subBuilder = [List builder];
        if (self.hasPeopleList) {
          [subBuilder mergeFrom:self.peopleList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPeopleList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPeopleList {
  return result.hasPeopleList;
}
- (List*) peopleList {
  return result.peopleList;
}
- (FollowedListResponse_Builder*) setPeopleList:(List*) value {
  result.hasPeopleList = YES;
  result.peopleList = value;
  return self;
}
- (FollowedListResponse_Builder*) setPeopleListBuilder:(List_Builder*) builderForValue {
  return [self setPeopleList:[builderForValue build]];
}
- (FollowedListResponse_Builder*) mergePeopleList:(List*) value {
  if (result.hasPeopleList &&
      result.peopleList != [List defaultInstance]) {
    result.peopleList =
      [[[List builderWithPrototype:result.peopleList] mergeFrom:value] buildPartial];
  } else {
    result.peopleList = value;
  }
  result.hasPeopleList = YES;
  return self;
}
- (FollowedListResponse_Builder*) clearPeopleList {
  result.hasPeopleList = NO;
  result.peopleList = [List defaultInstance];
  return self;
}
@end

