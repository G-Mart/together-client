// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UserResponse.pb.h"

@implementation UserResponseRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserResponseRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [DataRoot registerAllExtensions:registry];
    [UserDataRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface LoginResponse ()
@property (retain) NSString* sid;
@property (retain) User_Info* userInfo;
@end

@implementation LoginResponse

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasUserInfo {
  return !!hasUserInfo_;
}
- (void) setHasUserInfo:(BOOL) value {
  hasUserInfo_ = !!value;
}
@synthesize userInfo;
- (void) dealloc {
  self.sid = nil;
  self.userInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = @"";
    self.userInfo = [User_Info defaultInstance];
  }
  return self;
}
static LoginResponse* defaultLoginResponseInstance = nil;
+ (void) initialize {
  if (self == [LoginResponse class]) {
    defaultLoginResponseInstance = [[LoginResponse alloc] init];
  }
}
+ (LoginResponse*) defaultInstance {
  return defaultLoginResponseInstance;
}
- (LoginResponse*) defaultInstance {
  return defaultLoginResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeString:1 value:self.sid];
  }
  if (self.hasUserInfo) {
    [output writeMessage:2 value:self.userInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeStringSize(1, self.sid);
  }
  if (self.hasUserInfo) {
    size += computeMessageSize(2, self.userInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LoginResponse*) parseFromData:(NSData*) data {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromData:data] build];
}
+ (LoginResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginResponse*) parseFromInputStream:(NSInputStream*) input {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromInputStream:input] build];
}
+ (LoginResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromCodedInputStream:input] build];
}
+ (LoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginResponse*)[[[LoginResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResponse_Builder*) builder {
  return [[[LoginResponse_Builder alloc] init] autorelease];
}
+ (LoginResponse_Builder*) builderWithPrototype:(LoginResponse*) prototype {
  return [[LoginResponse builder] mergeFrom:prototype];
}
- (LoginResponse_Builder*) builder {
  return [LoginResponse builder];
}
@end

@interface LoginResponse_Builder()
@property (retain) LoginResponse* result;
@end

@implementation LoginResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LoginResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LoginResponse_Builder*) clear {
  self.result = [[[LoginResponse alloc] init] autorelease];
  return self;
}
- (LoginResponse_Builder*) clone {
  return [LoginResponse builderWithPrototype:result];
}
- (LoginResponse*) defaultInstance {
  return [LoginResponse defaultInstance];
}
- (LoginResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginResponse*) buildPartial {
  LoginResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LoginResponse_Builder*) mergeFrom:(LoginResponse*) other {
  if (other == [LoginResponse defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasUserInfo) {
    [self mergeUserInfo:other.userInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSid:[input readString]];
        break;
      }
      case 18: {
        User_Info_Builder* subBuilder = [User_Info builder];
        if (self.hasUserInfo) {
          [subBuilder mergeFrom:self.userInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (NSString*) sid {
  return result.sid;
}
- (LoginResponse_Builder*) setSid:(NSString*) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (LoginResponse_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = @"";
  return self;
}
- (BOOL) hasUserInfo {
  return result.hasUserInfo;
}
- (User_Info*) userInfo {
  return result.userInfo;
}
- (LoginResponse_Builder*) setUserInfo:(User_Info*) value {
  result.hasUserInfo = YES;
  result.userInfo = value;
  return self;
}
- (LoginResponse_Builder*) setUserInfoBuilder:(User_Info_Builder*) builderForValue {
  return [self setUserInfo:[builderForValue build]];
}
- (LoginResponse_Builder*) mergeUserInfo:(User_Info*) value {
  if (result.hasUserInfo &&
      result.userInfo != [User_Info defaultInstance]) {
    result.userInfo =
      [[[User_Info builderWithPrototype:result.userInfo] mergeFrom:value] buildPartial];
  } else {
    result.userInfo = value;
  }
  result.hasUserInfo = YES;
  return self;
}
- (LoginResponse_Builder*) clearUserInfo {
  result.hasUserInfo = NO;
  result.userInfo = [User_Info defaultInstance];
  return self;
}
@end

@interface DetailResponse ()
@property BOOL isFollow;
@property (retain) User_Info* userInfo;
@end

@implementation DetailResponse

- (BOOL) hasIsFollow {
  return !!hasIsFollow_;
}
- (void) setHasIsFollow:(BOOL) value {
  hasIsFollow_ = !!value;
}
- (BOOL) isFollow {
  return !!isFollow_;
}
- (void) setIsFollow:(BOOL) value {
  isFollow_ = !!value;
}
- (BOOL) hasUserInfo {
  return !!hasUserInfo_;
}
- (void) setHasUserInfo:(BOOL) value {
  hasUserInfo_ = !!value;
}
@synthesize userInfo;
- (void) dealloc {
  self.userInfo = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isFollow = NO;
    self.userInfo = [User_Info defaultInstance];
  }
  return self;
}
static DetailResponse* defaultDetailResponseInstance = nil;
+ (void) initialize {
  if (self == [DetailResponse class]) {
    defaultDetailResponseInstance = [[DetailResponse alloc] init];
  }
}
+ (DetailResponse*) defaultInstance {
  return defaultDetailResponseInstance;
}
- (DetailResponse*) defaultInstance {
  return defaultDetailResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsFollow) {
    [output writeBool:1 value:self.isFollow];
  }
  if (self.hasUserInfo) {
    [output writeMessage:2 value:self.userInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsFollow) {
    size += computeBoolSize(1, self.isFollow);
  }
  if (self.hasUserInfo) {
    size += computeMessageSize(2, self.userInfo);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DetailResponse*) parseFromData:(NSData*) data {
  return (DetailResponse*)[[[DetailResponse builder] mergeFromData:data] build];
}
+ (DetailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DetailResponse*)[[[DetailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DetailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (DetailResponse*)[[[DetailResponse builder] mergeFromInputStream:input] build];
}
+ (DetailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DetailResponse*)[[[DetailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DetailResponse*)[[[DetailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (DetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DetailResponse*)[[[DetailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DetailResponse_Builder*) builder {
  return [[[DetailResponse_Builder alloc] init] autorelease];
}
+ (DetailResponse_Builder*) builderWithPrototype:(DetailResponse*) prototype {
  return [[DetailResponse builder] mergeFrom:prototype];
}
- (DetailResponse_Builder*) builder {
  return [DetailResponse builder];
}
@end

@interface DetailResponse_Builder()
@property (retain) DetailResponse* result;
@end

@implementation DetailResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DetailResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DetailResponse_Builder*) clear {
  self.result = [[[DetailResponse alloc] init] autorelease];
  return self;
}
- (DetailResponse_Builder*) clone {
  return [DetailResponse builderWithPrototype:result];
}
- (DetailResponse*) defaultInstance {
  return [DetailResponse defaultInstance];
}
- (DetailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DetailResponse*) buildPartial {
  DetailResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DetailResponse_Builder*) mergeFrom:(DetailResponse*) other {
  if (other == [DetailResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsFollow) {
    [self setIsFollow:other.isFollow];
  }
  if (other.hasUserInfo) {
    [self mergeUserInfo:other.userInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DetailResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DetailResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsFollow:[input readBool]];
        break;
      }
      case 18: {
        User_Info_Builder* subBuilder = [User_Info builder];
        if (self.hasUserInfo) {
          [subBuilder mergeFrom:self.userInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsFollow {
  return result.hasIsFollow;
}
- (BOOL) isFollow {
  return result.isFollow;
}
- (DetailResponse_Builder*) setIsFollow:(BOOL) value {
  result.hasIsFollow = YES;
  result.isFollow = value;
  return self;
}
- (DetailResponse_Builder*) clearIsFollow {
  result.hasIsFollow = NO;
  result.isFollow = NO;
  return self;
}
- (BOOL) hasUserInfo {
  return result.hasUserInfo;
}
- (User_Info*) userInfo {
  return result.userInfo;
}
- (DetailResponse_Builder*) setUserInfo:(User_Info*) value {
  result.hasUserInfo = YES;
  result.userInfo = value;
  return self;
}
- (DetailResponse_Builder*) setUserInfoBuilder:(User_Info_Builder*) builderForValue {
  return [self setUserInfo:[builderForValue build]];
}
- (DetailResponse_Builder*) mergeUserInfo:(User_Info*) value {
  if (result.hasUserInfo &&
      result.userInfo != [User_Info defaultInstance]) {
    result.userInfo =
      [[[User_Info builderWithPrototype:result.userInfo] mergeFrom:value] buildPartial];
  } else {
    result.userInfo = value;
  }
  result.hasUserInfo = YES;
  return self;
}
- (DetailResponse_Builder*) clearUserInfo {
  result.hasUserInfo = NO;
  result.userInfo = [User_Info defaultInstance];
  return self;
}
@end

@interface UsernameExistResponse ()
@property BOOL isExist;
@end

@implementation UsernameExistResponse

- (BOOL) hasIsExist {
  return !!hasIsExist_;
}
- (void) setHasIsExist:(BOOL) value {
  hasIsExist_ = !!value;
}
- (BOOL) isExist {
  return !!isExist_;
}
- (void) setIsExist:(BOOL) value {
  isExist_ = !!value;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isExist = NO;
  }
  return self;
}
static UsernameExistResponse* defaultUsernameExistResponseInstance = nil;
+ (void) initialize {
  if (self == [UsernameExistResponse class]) {
    defaultUsernameExistResponseInstance = [[UsernameExistResponse alloc] init];
  }
}
+ (UsernameExistResponse*) defaultInstance {
  return defaultUsernameExistResponseInstance;
}
- (UsernameExistResponse*) defaultInstance {
  return defaultUsernameExistResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsExist) {
    [output writeBool:1 value:self.isExist];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasIsExist) {
    size += computeBoolSize(1, self.isExist);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UsernameExistResponse*) parseFromData:(NSData*) data {
  return (UsernameExistResponse*)[[[UsernameExistResponse builder] mergeFromData:data] build];
}
+ (UsernameExistResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UsernameExistResponse*)[[[UsernameExistResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UsernameExistResponse*) parseFromInputStream:(NSInputStream*) input {
  return (UsernameExistResponse*)[[[UsernameExistResponse builder] mergeFromInputStream:input] build];
}
+ (UsernameExistResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UsernameExistResponse*)[[[UsernameExistResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UsernameExistResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UsernameExistResponse*)[[[UsernameExistResponse builder] mergeFromCodedInputStream:input] build];
}
+ (UsernameExistResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UsernameExistResponse*)[[[UsernameExistResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UsernameExistResponse_Builder*) builder {
  return [[[UsernameExistResponse_Builder alloc] init] autorelease];
}
+ (UsernameExistResponse_Builder*) builderWithPrototype:(UsernameExistResponse*) prototype {
  return [[UsernameExistResponse builder] mergeFrom:prototype];
}
- (UsernameExistResponse_Builder*) builder {
  return [UsernameExistResponse builder];
}
@end

@interface UsernameExistResponse_Builder()
@property (retain) UsernameExistResponse* result;
@end

@implementation UsernameExistResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UsernameExistResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UsernameExistResponse_Builder*) clear {
  self.result = [[[UsernameExistResponse alloc] init] autorelease];
  return self;
}
- (UsernameExistResponse_Builder*) clone {
  return [UsernameExistResponse builderWithPrototype:result];
}
- (UsernameExistResponse*) defaultInstance {
  return [UsernameExistResponse defaultInstance];
}
- (UsernameExistResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UsernameExistResponse*) buildPartial {
  UsernameExistResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UsernameExistResponse_Builder*) mergeFrom:(UsernameExistResponse*) other {
  if (other == [UsernameExistResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsExist) {
    [self setIsExist:other.isExist];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UsernameExistResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UsernameExistResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsExist:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasIsExist {
  return result.hasIsExist;
}
- (BOOL) isExist {
  return result.isExist;
}
- (UsernameExistResponse_Builder*) setIsExist:(BOOL) value {
  result.hasIsExist = YES;
  result.isExist = value;
  return self;
}
- (UsernameExistResponse_Builder*) clearIsExist {
  result.hasIsExist = NO;
  result.isExist = NO;
  return self;
}
@end

@interface FollowListResponse ()
@property (retain) List* peopleList;
@end

@implementation FollowListResponse

- (BOOL) hasPeopleList {
  return !!hasPeopleList_;
}
- (void) setHasPeopleList:(BOOL) value {
  hasPeopleList_ = !!value;
}
@synthesize peopleList;
- (void) dealloc {
  self.peopleList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.peopleList = [List defaultInstance];
  }
  return self;
}
static FollowListResponse* defaultFollowListResponseInstance = nil;
+ (void) initialize {
  if (self == [FollowListResponse class]) {
    defaultFollowListResponseInstance = [[FollowListResponse alloc] init];
  }
}
+ (FollowListResponse*) defaultInstance {
  return defaultFollowListResponseInstance;
}
- (FollowListResponse*) defaultInstance {
  return defaultFollowListResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPeopleList) {
    [output writeMessage:1 value:self.peopleList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPeopleList) {
    size += computeMessageSize(1, self.peopleList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FollowListResponse*) parseFromData:(NSData*) data {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromData:data] build];
}
+ (FollowListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FollowListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromInputStream:input] build];
}
+ (FollowListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (FollowListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowListResponse*)[[[FollowListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowListResponse_Builder*) builder {
  return [[[FollowListResponse_Builder alloc] init] autorelease];
}
+ (FollowListResponse_Builder*) builderWithPrototype:(FollowListResponse*) prototype {
  return [[FollowListResponse builder] mergeFrom:prototype];
}
- (FollowListResponse_Builder*) builder {
  return [FollowListResponse builder];
}
@end

@interface FollowListResponse_Builder()
@property (retain) FollowListResponse* result;
@end

@implementation FollowListResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FollowListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FollowListResponse_Builder*) clear {
  self.result = [[[FollowListResponse alloc] init] autorelease];
  return self;
}
- (FollowListResponse_Builder*) clone {
  return [FollowListResponse builderWithPrototype:result];
}
- (FollowListResponse*) defaultInstance {
  return [FollowListResponse defaultInstance];
}
- (FollowListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FollowListResponse*) buildPartial {
  FollowListResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FollowListResponse_Builder*) mergeFrom:(FollowListResponse*) other {
  if (other == [FollowListResponse defaultInstance]) {
    return self;
  }
  if (other.hasPeopleList) {
    [self mergePeopleList:other.peopleList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FollowListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FollowListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        List_Builder* subBuilder = [List builder];
        if (self.hasPeopleList) {
          [subBuilder mergeFrom:self.peopleList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPeopleList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPeopleList {
  return result.hasPeopleList;
}
- (List*) peopleList {
  return result.peopleList;
}
- (FollowListResponse_Builder*) setPeopleList:(List*) value {
  result.hasPeopleList = YES;
  result.peopleList = value;
  return self;
}
- (FollowListResponse_Builder*) setPeopleListBuilder:(List_Builder*) builderForValue {
  return [self setPeopleList:[builderForValue build]];
}
- (FollowListResponse_Builder*) mergePeopleList:(List*) value {
  if (result.hasPeopleList &&
      result.peopleList != [List defaultInstance]) {
    result.peopleList =
      [[[List builderWithPrototype:result.peopleList] mergeFrom:value] buildPartial];
  } else {
    result.peopleList = value;
  }
  result.hasPeopleList = YES;
  return self;
}
- (FollowListResponse_Builder*) clearPeopleList {
  result.hasPeopleList = NO;
  result.peopleList = [List defaultInstance];
  return self;
}
@end

@interface FollowedListResponse ()
@property (retain) List* peopleList;
@end

@implementation FollowedListResponse

- (BOOL) hasPeopleList {
  return !!hasPeopleList_;
}
- (void) setHasPeopleList:(BOOL) value {
  hasPeopleList_ = !!value;
}
@synthesize peopleList;
- (void) dealloc {
  self.peopleList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.peopleList = [List defaultInstance];
  }
  return self;
}
static FollowedListResponse* defaultFollowedListResponseInstance = nil;
+ (void) initialize {
  if (self == [FollowedListResponse class]) {
    defaultFollowedListResponseInstance = [[FollowedListResponse alloc] init];
  }
}
+ (FollowedListResponse*) defaultInstance {
  return defaultFollowedListResponseInstance;
}
- (FollowedListResponse*) defaultInstance {
  return defaultFollowedListResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPeopleList) {
    [output writeMessage:1 value:self.peopleList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPeopleList) {
    size += computeMessageSize(1, self.peopleList);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FollowedListResponse*) parseFromData:(NSData*) data {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromData:data] build];
}
+ (FollowedListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FollowedListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromInputStream:input] build];
}
+ (FollowedListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowedListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (FollowedListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FollowedListResponse*)[[[FollowedListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FollowedListResponse_Builder*) builder {
  return [[[FollowedListResponse_Builder alloc] init] autorelease];
}
+ (FollowedListResponse_Builder*) builderWithPrototype:(FollowedListResponse*) prototype {
  return [[FollowedListResponse builder] mergeFrom:prototype];
}
- (FollowedListResponse_Builder*) builder {
  return [FollowedListResponse builder];
}
@end

@interface FollowedListResponse_Builder()
@property (retain) FollowedListResponse* result;
@end

@implementation FollowedListResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FollowedListResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FollowedListResponse_Builder*) clear {
  self.result = [[[FollowedListResponse alloc] init] autorelease];
  return self;
}
- (FollowedListResponse_Builder*) clone {
  return [FollowedListResponse builderWithPrototype:result];
}
- (FollowedListResponse*) defaultInstance {
  return [FollowedListResponse defaultInstance];
}
- (FollowedListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FollowedListResponse*) buildPartial {
  FollowedListResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FollowedListResponse_Builder*) mergeFrom:(FollowedListResponse*) other {
  if (other == [FollowedListResponse defaultInstance]) {
    return self;
  }
  if (other.hasPeopleList) {
    [self mergePeopleList:other.peopleList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FollowedListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FollowedListResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        List_Builder* subBuilder = [List builder];
        if (self.hasPeopleList) {
          [subBuilder mergeFrom:self.peopleList];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPeopleList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPeopleList {
  return result.hasPeopleList;
}
- (List*) peopleList {
  return result.peopleList;
}
- (FollowedListResponse_Builder*) setPeopleList:(List*) value {
  result.hasPeopleList = YES;
  result.peopleList = value;
  return self;
}
- (FollowedListResponse_Builder*) setPeopleListBuilder:(List_Builder*) builderForValue {
  return [self setPeopleList:[builderForValue build]];
}
- (FollowedListResponse_Builder*) mergePeopleList:(List*) value {
  if (result.hasPeopleList &&
      result.peopleList != [List defaultInstance]) {
    result.peopleList =
      [[[List builderWithPrototype:result.peopleList] mergeFrom:value] buildPartial];
  } else {
    result.peopleList = value;
  }
  result.hasPeopleList = YES;
  return self;
}
- (FollowedListResponse_Builder*) clearPeopleList {
  result.hasPeopleList = NO;
  result.peopleList = [List defaultInstance];
  return self;
}
@end

